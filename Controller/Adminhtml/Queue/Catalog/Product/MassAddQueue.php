<?php

/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright Copyright (c) 2022 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */

namespace BitTools\SkyHub\Controller\Adminhtml\Queue\Catalog\Product;

use BitTools\SkyHub\Integration\Integrator\Catalog\ProductValidation;
use Magento\Backend\App\Action\Context as BackendContext;
use BitTools\SkyHub\Helper\Context as HelperContext;
use BitTools\SkyHub\Model\ResourceModel\QueueFactory;
use Magento\Framework\Controller\ResultFactory;
use Magento\Ui\Component\MassAction\Filter;
use Magento\Catalog\Model\ResourceModel\Product\CollectionFactory;
use Magento\Backend\App\Action;

/**
 * MassAddQueue class
 */
class MassAddQueue extends Action
{
    /**
     * @var string
     */
    const ADMIN_RESOURCE = 'BitTools_SkyHub::skyhub_queues_add_product';

    /** 
     * @var ProductValidation
     */
    protected $productValidation;

    /**
     * @var QueueFactory
     */
    protected $queueResourceFactory;

    /**
     * @var Filter
     */
    protected $filter;

    /**
     * MassAddQueue constructor
     *
     * @param BackendContext $context
     * @param ProductValidation $productValidation
     * @param QueueFactory $queueResourceFactory
     * @param Filter $filter
     * @param CollectionFactory $collectionFactory
     */
    public function __construct(
        BackendContext $context,
        ProductValidation $productValidation,
        QueueFactory $queueResourceFactory,
        Filter $filter,
        CollectionFactory $collectionFactory
    ) {
        parent::__construct($context);
        $this->productValidation = $productValidation;
        $this->queueResourceFactory = $queueResourceFactory;
        $this->filter = $filter;
        $this->collectionFactory = $collectionFactory;
    }
    
    /**
     * @return \Magento\Framework\View\Result\Page
     */
    public function execute()
    {
        $collection = $this->filter->getCollection($this->collectionFactory->create());
        $productIds = [];
        /** @var \Magento\Catalog\Model\Product $product */
        foreach ($collection->getItems() as $product) {
            if (!$this->productValidation->canIntegrateProduct($product)) {
                continue;
            }
            $productIds[] = $product->getId();
        }

        if (empty($productIds)) {
            return $this->resultFactory->create(ResultFactory::TYPE_REDIRECT)->setPath('catalog/product/index');
        }

        /** @var Queue $queueResource */
        $queueResource = $this->queueResourceFactory->create();

        /** Queue product. */
        $queueResource->queue(
            $productIds,
            \BitTools\SkyHub\Model\Entity::TYPE_CATALOG_PRODUCT,
            \BitTools\SkyHub\Model\Queue::PROCESS_TYPE_EXPORT
        );
        $this->messageManager->addSuccessMessage(
            __('Products add to queue.')
        );
        return $this->resultFactory->create(ResultFactory::TYPE_REDIRECT)->setPath('catalog/product/index');
    }
}
